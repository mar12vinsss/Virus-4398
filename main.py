import discord
from discord.ext import commands
import yt_dlp
import asyncio
import os
from config import TOKEN
from myserver import sever_on

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏®
ROLE_ID = 1317813716544262184  # ID ‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡∏Å  
VERIFY_CHANNEL_ID = 1349017134919061504  # ‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô  
ADMIN_CHANNEL_ID = 1349017225293594696  # ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô  

verified_users = set()

# ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
class VerifyModal(discord.ui.Modal, title="‚úÖ ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®‡∏Ç‡∏≠‡πÄ‡∏ó‡∏™"):
    name = discord.ui.TextInput(label="üéÆ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°", placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°")
    age = discord.ui.TextInput(label="üî¢ ‡∏≠‡∏≤‡∏¢‡∏∏", placeholder="‡πÉ‡∏™‡πà‡∏≠‡∏≤‡∏¢‡∏∏", style=discord.TextStyle.short)
    gender = discord.ui.TextInput(label="‚öß ‡πÄ‡∏û‡∏®", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏≤‡∏¢, ‡∏´‡∏ç‡∏¥‡∏á")
    rules = discord.ui.TextInput(label="üìú ‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏é‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? (‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÉ‡∏ä‡πà' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ '‡πÉ‡∏ä‡πà'", style=discord.TextStyle.short)

    async def on_submit(self, interaction: discord.Interaction):
        if self.rules.value.strip().lower() != "‡πÉ‡∏ä‡πà":
            await interaction.response.send_message("‚ùå ‡∏û‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ '‡πÉ‡∏ä‡πà' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!", ephemeral=True)
            return
        
        role = discord.utils.get(interaction.guild.roles, id=ROLE_ID)
        if role:
            await interaction.user.add_roles(role)
            verified_users.add(interaction.user.id)

            # ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ó‡∏ô
            admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
            if admin_channel:
                embed = discord.Embed(
                    title="üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô!",
                    description=(
                        f"üë§ **‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°:** {self.name.value}\n"
                        f"üî¢ **‡∏≠‡∏≤‡∏¢‡∏∏:** {self.age.value}\n"
                        f"‚öß **‡πÄ‡∏û‡∏®:** {self.gender.value}\n\n"
                        f"‚úç **‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏î‡∏¢:** {interaction.user.mention}"
                    ),
                    color=discord.Color.orange()
                )
                avatar_url = interaction.user.avatar.url if interaction.user.avatar else interaction.user.default_avatar.url
                embed.set_thumbnail(url=avatar_url)
                await admin_channel.send(embed=embed)

            await interaction.response.send_message("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£!", ephemeral=True)

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
class VerifyButton(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="‚úÖ ‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®", style=discord.ButtonStyle.green, custom_id="verify_button")
    async def verify_button_callback(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(VerifyModal())

@bot.command(name="setupverify")
@commands.has_permissions(administrator=True)
async def setup_verify(ctx):
    channel = bot.get_channel(VERIFY_CHANNEL_ID)
    if channel:
        embed = discord.Embed(
            title="‡∏£‡∏±‡∏ö‡∏¢‡∏®",
            description="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®!",
            color=discord.Color.green()
        )
        await channel.send(embed=embed, view=VerifyButton())
        await ctx.send("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")

        

# ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü
#@bot.event
#async def on_member_join(member):
#    channel = bot.get_channel(VERIFY_CHANNEL_ID)
#    if channel:
#        embed = discord.Embed(
#            title="üéâ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà!",
#            description=f"{member.mention} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!\n‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®",
#            color=discord.Color.green()
#        )
#        avatar_url = member.avatar.url if member.avatar else member.default_avatar.url
#        embed.set_thumbnail(url=avatar_url)
#        await channel.send(embed=embed, view=VerifyButton())###

# Variables for looping, queue and current song
is_looping = False
song_queue = []
current_song = None
volume = 1.0  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á 1.0 (100%)

@bot.command(name="p")
async def p(ctx, url: str):
    global current_song, song_queue, is_looping
    if not ctx.author.voice:
        await ctx.send("‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ß‡∏≠‡∏¢‡∏ã‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏¥‡∏û‡∏£‡∏µ‡πà!")
        return

    voice_channel = ctx.author.voice.channel
    if ctx.voice_client is None:
        voice = await voice_channel.connect()
    else:
        voice = ctx.voice_client

    ydl_opts = {
        'format': 'bestaudio/best',
        'noplaylist': True,
    }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        url2 = info['url']
        title = info['title']

    song_queue.append((url2, title))

    if not current_song:
        await play_next(ctx, voice)

    await ctx.send(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á‡∏•‡∏á‡∏Ñ‡∏¥‡∏ß: {title}")

async def play_next(ctx, voice):
    global current_song, song_queue, is_looping, volume
    if song_queue:
        url, title = song_queue.pop(0)
        current_song = (url, title)
        
        def after_playing(e):
            if is_looping:
                voice.play(discord.FFmpegPCMAudio(url, executable="ffmpeg"), after=after_playing)
                voice.source = discord.PCMVolumeTransformer(voice.source, volume)
            else:
                asyncio.run_coroutine_threadsafe(play_next(ctx, voice), bot.loop)

        voice.play(discord.FFmpegPCMAudio(url, executable="ffmpeg"), after=after_playing)
        voice.source = discord.PCMVolumeTransformer(voice.source, volume)
        await ctx.send(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á: {title}")
    else:
        current_song = None
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß")

@bot.command(name="s")
async def s(ctx):
    if ctx.voice_client:
        await ctx.guild.voice_client.disconnect()
        await ctx.send("‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏î‡∏µ")
    else:
        await ctx.send("‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏î‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡πÑ‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á")

@bot.command(name="l")
async def l(ctx):
    global is_looping
    if ctx.voice_client:
        is_looping = not is_looping
        status = "‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß" if is_looping else "‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î"
        await ctx.send(status)
    else:
        await ctx.send("‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏∞!")

@bot.command(name="q")
async def q(ctx):
    if song_queue:
        current_song = song_queue[0]
        await ctx.send(f"‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏∑‡∏≠: {current_song[1]}")
    else:
        await ctx.send("‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤")

@bot.command(name="sk")
async def sk(ctx):
    if ctx.voice_client:
        ctx.voice_client.stop()
        await ctx.send("‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
        await play_next(ctx, ctx.voice_client)
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

@bot.command(name="-")
async def mute(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.source = discord.PCMVolumeTransformer(ctx.voice_client.source)
        ctx.voice_client.source.volume = 0.0
        await ctx.send("‡∏ö‡∏≠‡∏ó‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

@bot.command(name="v")
async def vol(ctx, volume_level: int):
    global volume
    if ctx.voice_client and ctx.voice_client.is_playing():
        volume = max(0.0, min(volume_level / 100.0, 1.0))
        ctx.voice_client.source = discord.PCMVolumeTransformer(ctx.voice_client.source)
        ctx.voice_client.source.volume = volume
        await ctx.send(f"‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô {volume_level}%")
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

@bot.event
async def on_voice_state_update(member, before, after):
    if after.channel is not None and member == bot.user:
        # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 100%
        voice_client = bot.voice_clients[0]  # ‡πÉ‡∏ä‡πâ voice client ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
        voice_client.source.volume = 1.0  # ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 100%
        print(f"‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {after.channel.name} ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô 100%")

# ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"‚úÖ {bot.user} ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß!")
    admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
    if admin_channel:
        await admin_channel.send("‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß!")

server_on()       

bot.run(os.getenv('TOKEN'))
